@model List<string>
@{
    Layout = "_LayoutHome";
}

<div class="container-fluid add-form-list">
    <div class="row">
        <div class="col-sm-12">
            <div class="card">
                <div class="card-header d-flex justify-content-between">
                    <div class="header-title">
                        <h4 class="card-title">Thêm nhân viên</h4>
                    </div>
                </div>
                <div class="card-body">
                    <form data-toggle="validator">
                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label>Họ và tên *</label>
                                    <input id="ip-staff-name" type="text" class="form-control" placeholder="Họ và tên nhân viên" required>
                                    <div class="help-block with-errors"></div>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label>Số điện thoại *</label>
                                    <input id="ip-staff-phone" type="text" class="form-control" placeholder="Số điện thoại nhân viên" required>
                                    <div class="help-block with-errors"></div>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label>Email *</label>
                                    <input id ="ip-staff-email" type="text" class="form-control" placeholder="Email nhân viên" required>
                                    <div class="help-block with-errors"></div>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label>Giới tính</label>
                                    <select id="ip-staff-gender" name="type" class=" form-control" data-style="py-0">
                                        <option value="MALE">Nam</option>
                                        <option value="FEMALE">Nữ</option>
                                    </select>
                                </div>
                            </div>

                            <div class="col-6">
                                @* <div class="form-group">
                                    <label>Trạng thái *</label>
                                    <select id="ip-staff-status" name="type" class=" form-control" data-style="py-0">
                                        
                                        @foreach (var status in Model)
                                        {
                                            <option value="@status"data-status-value ="@status">@status</option>
                                        }
                                    </select>
                                </div> *@

                                @await Component.InvokeAsync("BranchSelect", new { allowMultiSelect = false })
                            </div>

                            <div class="col-6">
                                @await Component.InvokeAsync("RoleSelect")
                            </div>
                          
                        </div>
                        
                    </form>
                  
                    <div class="d-flex justify-content-end align-items-center">
                        <button id="btn-add-staff" onclick="handleCreateStaff()" class="btn btn-primary mr-2" type="button">Thêm nhân viên</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <!-- Page end  -->
</div>



<script>

    const handleCreateStaff = async () => {

        const btnAddStaff = document.getElementById("btn-add-staff");


        try {
            const data = {
                Branch: Number(document.getElementById("branches").value),
                Gender: document.getElementById("ip-staff-gender").value,
                Name: document.getElementById("ip-staff-name").value,
                Phone: document.getElementById("ip-staff-phone").value,
                Email: document.getElementById("ip-staff-email").value,
                Roles: Array.from(document.getElementById("authorities")).filter(option => option.selected).map(option => Number(option.value))
            }

            console.log({ data });

            btnAddStaff.disabled = true;
            btnAddStaff.textContent = "Đang thêm nhân viên";

            await axios.post("/staffs/create", data);

            const baseURL = window.location.origin;
            window.location.href = baseURL + "/staffs"

        }catch (error) {
            console.log(error);
            alert("Thêm nhân viên thất bại");
        }


        btnAddStaff.disabled = false;
        btnAddStaff.textContent = "Thêm nhân viên";
    }


</script>

<script>

    var staffStatus = document.querySelectorAll('[data-status-value]');

    function updateStaffStatus(staffStatusElement, status) {
        switch (status) {
            case 'ACTIVE':
                staffStatusElement.textContent = "Đang làm việc";
                break;
            case 'ON_LEAVE':
                staffStatusElement.textContent = "Đang nghỉ phép";
                break;
            case 'RESIGNED':
                staffStatusElement.textContent = "Đã từ chức";
                break;
            case 'RETIRED':
                staffStatusElement.textContent = "Đã nghỉ hưu";
                break;
            case 'SUSPENDED':
                staffStatusElement.textContent = "Bị đình chỉ";
                break;
            case 'TRAINING':
                staffStatusElement.textContent = "Đang huấn luyện";
                break;
            case 'TERMINATED':
                staffStatusElement.textContent = "Đã chấm dứt";
                break;
            case 'HIRE_NOT_STARTED':
                staffStatusElement.textContent = "Chưa bắt đầu";
                break;
            case 'PENDING_INVITATION':
                staffStatusElement.textContent = "Đang chờ mời";
                break;
            default:
                console.log("Unknown status");
                break;
        }
        
    }

    [...staffStatus].forEach(status => {
        const statusValue = status.dataset.statusValue;
        updateStaffStatus(status, statusValue)
    })

</script>